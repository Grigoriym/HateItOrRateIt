name: Release

on:
  push:
    branches: [ "master" ]
    tags:
      - v*

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    env:
      HIOR_PATH_R: ${{ secrets.HIOR_PATH_R }}
      HIOR_KEY_PASS_R: ${{ secrets.HIOR_KEY_PASS_R }}
      HIOR_STORE_PASS_R: ${{ secrets.HIOR_STORE_PASS_R }}
      HIOR_ALIAS_R: ${{ secrets.HIOR_ALIAS_R }}
      ENCODED_STRING_R: ${{ secrets.HIOR_KEYSTORE_R }}

      HIOR_PATH_D: ${{ secrets.HIOR_PATH_D }}
      HIOR_KEY_PASS_D: ${{ secrets.HIOR_KEY_PASS_D }}
      HIOR_STORE_PASS_D: ${{ secrets.HIOR_STORE_PASS_D }}
      HIOR_ALIAS_D: ${{ secrets.HIOR_ALIAS_D }}
      ENCODED_STRING_D: ${{ secrets.HIOR_KEYSTORE_D }}

      GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Setup Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Decode google-services.json
        run: echo "$GOOGLE_SERVICES_JSON" | base64 --decode > app/google-services.json

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Restore release keystore.jks
        run: echo $ENCODED_STRING_R | base64 -d > ./release.keystore.jks

      - name: Restore debug keystore.jks
        run: echo $ENCODED_STRING_D | base64 -d > ./debug.keystore.jks

      - name: Build Release apk
        run: ./gradlew assembleRelease

      - name: Build Release bundle
        run: ./gradlew bundleRelease

      - name: Upload Release Build To Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            app/build/outputs/apl/release/
            app/build/outputs/bundle/release/

      - name: Get latest tag
        id: last_tag
        run: |
          LAST_TAG=$(git tag --sort=-creatordate | tail -n 2 | head -n 1)
          if [ -z "$LAST_TAG" ]; then
            echo "LAST_TAG=none" >> $GITHUB_ENV
          else
            echo "LAST_TAG=$LAST_TAG" >> $GITHUB_ENV
          fi

      - name: Generate changelog
        id: generate_changelog
        run: |
          if [[ "$LAST_TAG" == "none" ]]; then
            echo "CHANGELOG=First release!" >> $GITHUB_ENV
          else
            echo "CHANGELOG<<EOF" >> $GITHUB_ENV
            git log --pretty=format:"- %s" $LAST_TAG..HEAD >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Create Github release
        uses: softprops/action-gh-release@v2
        with:
          body: "${{ env.CHANGELOG }}"
          tag_name: "${{ github.ref_name }}"
          files: |
            app/build/outputs/apk/release/app-release.apk
            app/build/outputs/bundle/release/app-release.aab